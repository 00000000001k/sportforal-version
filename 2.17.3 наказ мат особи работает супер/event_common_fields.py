# event_common_fields.py
# -*- coding: utf-8 -*-

import customtkinter as ctk
import tkinter.messagebox as messagebox

# –í–∏–¥–∞–ª—è—î–º–æ –ø—Ä–æ–±–ª–µ–º–Ω–∏–π —ñ–º–ø–æ—Ä—Ç - –±—É–¥–µ–º–æ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–æ
# from app import add_contract_to_current_event
from globals import FIELDS, EXAMPLES
from custom_widgets import CustomEntry
from gui_utils import bind_entry_shortcuts, create_context_menu
from state_manager import save_current_state

# –ü–æ–ª—è, —è–∫—ñ —î –∑–∞–≥–∞–ª—å–Ω–∏–º–∏ –¥–ª—è –≤—Å—å–æ–≥–æ –∑–∞—Ö–æ–¥—É
COMMON_FIELDS = ["–∑–∞—Ö—ñ–¥", "–¥–∞—Ç–∞", "–∞–¥—Ä–µ—Å–∞"]

# –ì–ª–æ–±–∞–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∫–æ–∂–Ω–æ–≥–æ –∑–∞—Ö–æ–¥—É
event_common_data = {}


def create_common_fields_block(parent_frame, event_name, tabview=None):
    """–°—Ç–≤–æ—Ä—é—î –±–ª–æ–∫ –∑–∞–≥–∞–ª—å–Ω–∏—Ö –ø–æ–ª—ñ–≤ –¥–ª—è –∑–∞—Ö–æ–¥—É"""

    # –û—Å–Ω–æ–≤–Ω–∏–π —Ñ—Ä–µ–π–º –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö –ø–æ–ª—ñ–≤
    common_frame = ctk.CTkFrame(parent_frame, border_width=2, border_color="green")
    common_frame.pack(pady=(5, 15), padx=5, fill="x")

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑ –∫–Ω–æ–ø–∫–æ—é –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    header_frame = ctk.CTkFrame(common_frame, fg_color="transparent")
    header_frame.pack(fill="x", padx=10, pady=(10, 5))

    header_label = ctk.CTkLabel(header_frame,
                                text="üìã –ó–ê–ì–ê–õ–¨–ù–Ü –î–ê–ù–Ü –ó–ê–•–û–î–£",
                                font=("Arial", 16, "bold"),
                                text_color="green")
    header_label.pack(side="top")

    # –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞—Ö–æ–¥—É
    def remove_current_event():
        if messagebox.askokcancel("–í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞—Ö—ñ–¥",
                                  f"–í–∏ –¥—ñ–π—Å–Ω–æ –±–∞–∂–∞—î—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞—Ö—ñ–¥ '{event_name}'?\n\n–ë—É–¥—É—Ç—å –≤–∏–¥–∞–ª–µ–Ω—ñ:\n‚Ä¢ –í—Å—ñ –¥–æ–≥–æ–≤–æ—Ä–∏ —Ü—å–æ–≥–æ –∑–∞—Ö–æ–¥—É\n‚Ä¢ –ó–∞–≥–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑–∞—Ö–æ–¥—É\n‚Ä¢ –í–∫–ª–∞–¥–∫–∞ –∑–∞—Ö–æ–¥—É"):
            from globals import document_blocks

            # –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –±–ª–æ–∫–∏ –¥–æ–≥–æ–≤–æ—Ä—ñ–≤ —Ü—å–æ–≥–æ –∑–∞—Ö–æ–¥—É
            blocks_to_remove = [block for block in document_blocks if block.get("tab_name") == event_name]
            for block in blocks_to_remove:
                if block in document_blocks:
                    document_blocks.remove(block)
                # –ó–Ω–∏—â—É—î–º–æ —Ñ—Ä–µ–π–º –±–ª–æ–∫—É
                if "frame" in block:
                    try:
                        block["frame"].destroy()
                    except:
                        pass

            # –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–≥–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑–∞—Ö–æ–¥—É
            remove_event_common_data(event_name)

            # –í–∏–¥–∞–ª—è—î–º–æ –≤–∫–ª–∞–¥–∫—É
            try:
                tabview.delete(event_name)
                print(f"[INFO] –ó–∞—Ö—ñ–¥ '{event_name}' –≤–∏–¥–∞–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
            except Exception as e:
                print(f"[ERROR] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –≤–∫–ª–∞–¥–∫–∏ '{event_name}': {e}")

            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω
            save_current_state(document_blocks, tabview)

    delete_button = ctk.CTkButton(header_frame,
                                  text="‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞—Ö—ñ–¥",
                                  fg_color="red",
                                  hover_color="darkred",
                                  width=120,
                                  height=32,
                                  font=("Arial", 11, "bold"),
                                  command=remove_current_event)
    delete_button.pack(side="right")

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É (–ª–æ–∫–∞–ª—å–Ω–∏–π —ñ–º–ø–æ—Ä—Ç)
    def add_contract_handler():
        try:
            # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ª–æ–∫–∞–ª—å–Ω–æ, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ —Ü–∏–∫–ª—ñ—á–Ω–æ–≥–æ —ñ–º–ø–æ—Ä—Ç—É
            from app import add_contract_to_current_event
            add_contract_to_current_event(tabview)
        except ImportError as e:
            print(f"[ERROR] –ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ add_contract_to_current_event: {e}")
            messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", "–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –¥–æ–≥–æ–≤—ñ—Ä. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –ø—Ä–æ–≥—Ä–∞–º–∏.")

    ctk.CTkButton(header_frame, text="‚ûï –î–æ–¥–∞—Ç–∏ –¥–æ–≥–æ–≤—ñ—Ä",
                  command=add_contract_handler,
                  fg_color="#2196F3").pack(side="left", padx=5)

    # –ü—ñ–¥–∫–∞–∑–∫–∞
    info_label = ctk.CTkLabel(common_frame,
                              text="–¶—ñ –ø–æ–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–æ–ø—ñ—é—é—Ç—å—Å—è —É –≤—Å—ñ –¥–æ–≥–æ–≤–æ—Ä–∏ —Ü—å–æ–≥–æ –∑–∞—Ö–æ–¥—É",
                              font=("Arial", 12),
                              text_color="gray60")
    info_label.pack(pady=(0, 10))

    # –§—Ä–µ–π–º –¥–ª—è –ø–æ–ª—ñ–≤
    fields_frame = ctk.CTkFrame(common_frame, fg_color="transparent")
    fields_frame.pack(fill="x", padx=10, pady=(0, 10))

    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–ª—è
    common_entries = {}
    context_menu = create_context_menu(common_frame)

    for i, field_key in enumerate(COMMON_FIELDS):
        # –õ–µ–π–±–ª
        label = ctk.CTkLabel(fields_frame,
                             text=f"<{field_key}>",
                             anchor="w",
                             width=100,
                             font=("Arial", 12, "bold"))
        label.grid(row=i, column=0, padx=5, pady=5, sticky="w")

        # –ü–æ–ª–µ –≤–≤–æ–¥—É
        entry = CustomEntry(fields_frame, field_name=field_key, examples_dict=EXAMPLES)
        entry.grid(row=i, column=1, padx=5, pady=5, sticky="ew")
        fields_frame.columnconfigure(1, weight=1)

        # –ö–Ω–æ–ø–∫–∞ –ø—ñ–¥–∫–∞–∑–∫–∏
        hint_button = ctk.CTkButton(fields_frame,
                                    text="‚Ñπ",
                                    width=28,
                                    height=28,
                                    font=("Arial", 14),
                                    command=lambda h=EXAMPLES.get(field_key, "–ù–µ–º–∞—î –ø—ñ–¥–∫–∞–∑–∫–∏"), f=field_key:
                                    messagebox.showinfo(f"–ü—ñ–¥–∫–∞–∑–∫–∞ –¥–ª—è <{f}>", h))
        hint_button.grid(row=i, column=2, padx=(0, 5), pady=5, sticky="e")

        # –ó–≤'—è–∑—É—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–µ –º–µ–Ω—é
        bind_entry_shortcuts(entry, context_menu)

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–æ–ª–µ
        common_entries[field_key] = entry

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
        if event_name in event_common_data and field_key in event_common_data[event_name]:
            entry.set_text(event_common_data[event_name][field_key])

        # –ü—Ä–∏–≤'—è–∑—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ
        entry.bind("<KeyRelease>", lambda e, field=field_key: update_common_field(event_name, field, e))
        entry.bind("<FocusOut>", lambda e, field=field_key: update_common_field(event_name, field, e))

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –∑–∞—Ö–æ–¥—É, —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î
    if event_name not in event_common_data:
        event_common_data[event_name] = {}

    return common_frame, common_entries


def update_common_field(event_name, field_key, event):
    """–û–Ω–æ–≤–ª—é—î –∑–∞–≥–∞–ª—å–Ω–µ –ø–æ–ª–µ —Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î –π–æ–≥–æ –∑ —É—Å—ñ–º–∞ –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏ –∑–∞—Ö–æ–¥—É"""
    from globals import document_blocks

    # –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
    new_value = event.widget.get()

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —É –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    if event_name not in event_common_data:
        event_common_data[event_name] = {}
    event_common_data[event_name][field_key] = new_value

    # –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∑ —É—Å—ñ–º–∞ –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏ —Ü—å–æ–≥–æ –∑–∞—Ö–æ–¥—É
    sync_common_fields_to_contracts(event_name)


def sync_common_fields_to_contracts(event_name):
    """–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î –∑–∞–≥–∞–ª—å–Ω—ñ –ø–æ–ª—è –∑ —É—Å—ñ–º–∞ –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏ –∑–∞—Ö–æ–¥—É"""
    from globals import document_blocks

    if event_name not in event_common_data:
        return

    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –±–ª–æ–∫–∏ —Ü—å–æ–≥–æ –∑–∞—Ö–æ–¥—É
    event_blocks = [block for block in document_blocks if block.get("tab_name") == event_name]

    # –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥—ñ–ª—å–Ω—ñ –ø–æ–ª—è –≤ –∫–æ–∂–Ω–æ–º—É –±–ª–æ—Ü—ñ
    for block in event_blocks:
        entries = block.get("entries", {})
        for field_key in COMMON_FIELDS:
            if field_key in entries and field_key in event_common_data[event_name]:
                entry_widget = entries[field_key]
                # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω
                current_state = entry_widget.cget("state")
                # –¢–∏–º—á–∞—Åovo —Ä–æ–±–∏–º–æ –ø–æ–ª–µ –¥–æ—Å—Ç—É–ø–Ω–∏–º –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
                entry_widget.configure(state="normal")
                # –û–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è
                entry_widget.set_text(event_common_data[event_name][field_key])
                # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω
                entry_widget.configure(state=current_state)


def fill_common_fields_for_new_contract(event_name, contract_entries):
    """–ó–∞–ø–æ–≤–Ω—é—î –∑–∞–≥–∞–ª—å–Ω—ñ –ø–æ–ª—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä—É"""
    if event_name not in event_common_data:
        return

    for field_key in COMMON_FIELDS:
        if field_key in contract_entries and field_key in event_common_data[event_name]:
            entry_widget = contract_entries[field_key]
            # –ó–∞–ø–æ–≤–Ω—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è–º —ñ–∑ –∑–∞–≥–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö
            entry_widget.set_text(event_common_data[event_name][field_key])


def get_common_data_for_event(event_name):
    """–ü–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∑–∞—Ö–æ–¥—É"""
    return event_common_data.get(event_name, {})


def set_common_data_for_event(event_name, data):
    """–í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∑–∞–≥–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∑–∞—Ö–æ–¥—É"""
    event_common_data[event_name] = data


def remove_event_common_data(event_name):
    """–í–∏–¥–∞–ª—è—î –∑–∞–≥–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑–∞—Ö–æ–¥—É –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∑–∞—Ö–æ–¥—É"""
    if event_name in event_common_data:
        del event_common_data[event_name]