# app.py

import customtkinter as ctk
import tkinter.messagebox as messagebox

from globals import version,name_prog, document_blocks, FIELDS
from state_manager import (
    save_current_state,
    setup_auto_save,
    load_application_state,
    restore_application_state
)
from generation import combined_generation_process
from events import add_event, remove_tab
from document_block import create_document_fields_block
import koshtorys
from excel_export import export_document_data_to_excel
from generation import generate_documents_word


def launch_main_app():
    global main_app_root, tabview, event_name_entry

    ctk.set_appearance_mode("light")
    ctk.set_default_color_theme("green")

    main_app_root = ctk.CTk()
    main_app_root.title(name_prog + version)
    main_app_root.geometry("1200x750")

    # --- –í–µ—Ä—Ö–Ω—è –ø–∞–Ω–µ–ª—å ---
    top_controls_frame = ctk.CTkFrame(main_app_root)
    top_controls_frame.pack(pady=10, padx=10, fill="x")

    # Tabview (–≤–∫–ª–∞–¥–∫–∏ –∑–∞—Ö–æ–¥—ñ–≤)
    tabview = ctk.CTkTabview(main_app_root)
    tabview.pack(fill="both", expand=True, padx=10, pady=10)

    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ —Å—Ç–∞–Ω—É
    saved_state = load_application_state()
    if saved_state:
        restore_application_state(saved_state, tabview, main_app_root)
    else:
        # –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–æ–≥–æ —Å—Ç–∞–Ω—É, —Å—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        print("[INFO] –ó–∞–ø—É—Å–∫ –∑ —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞")

    # –í–≤–µ–¥–µ–Ω–Ω—è –Ω–∞–∑–≤–∏ –∑–∞—Ö–æ–¥—É
    event_input_frame = ctk.CTkFrame(top_controls_frame)
    event_input_frame.pack(side="left", fill="x", expand=True, padx=5)

    event_name_entry = ctk.CTkEntry(event_input_frame, placeholder_text="–ù–∞–∑–≤–∞ –∑–∞—Ö–æ–¥—É", width=250)
    event_name_entry.pack(side="left", padx=5, fill="x", expand=True)

    def on_add_event_from_entry():
        name = event_name_entry.get().strip()
        if name:
            add_event(name, tabview)
            event_name_entry.delete(0, 'end')
            save_current_state(document_blocks, tabview)
        else:
            messagebox.showwarning("–£–≤–∞–≥–∞", "–ù–∞–∑–≤–∞ –∑–∞—Ö–æ–¥—É –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—å–æ—é!")

    ctk.CTkButton(event_input_frame, text="‚ûï –î–æ–¥–∞—Ç–∏", width=80, command=on_add_event_from_entry) \
        .pack(side="left", padx=5)

    # –ö–Ω–æ–ø–∫–∏ –¥—ñ–π
    # ctk.CTkButton(top_controls_frame, text="‚ûï –î–æ–¥–∞—Ç–∏ –¥–æ–≥–æ–≤—ñ—Ä",
    #               command=lambda: add_contract_to_current_event(tabview),
    #               fg_color="#2196F3").pack(side="left", padx=5)

    ctk.CTkButton(top_controls_frame, text="–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –¥–æ–≥–æ–≤–æ—Ä–∏",
                  command=lambda: generate_documents_word(tabview)).pack(padx=5, pady=5, side="left")

    ctk.CTkButton(top_controls_frame, text="üí∞ –ö–æ—à—Ç–æ—Ä–∏—Å",
                  command=lambda: koshtorys.fill_koshtorys(document_blocks),
                  fg_color="#FF9800").pack(side="left", padx=5)

    ctk.CTkButton(top_controls_frame, text="üì• Excel",
                  command=lambda: export_document_data_to_excel(document_blocks, FIELDS),
                  fg_color="#00BCD4").pack(side="left", padx=5)


    ctk.CTkLabel(top_controls_frame, text=version, text_color="gray", font=("Arial", 12)) \
        .pack(side="right", padx=10)

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ –ø—Ä–æ–≥—Ä–∞–º–∏
    setup_auto_save(main_app_root, document_blocks, tabview)

    return main_app_root, tabview


def add_contract_to_current_event(tabview):
    """–î–æ–¥–∞—î –Ω–æ–≤–∏–π –¥–æ–≥–æ–≤—ñ—Ä –¥–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–∞—Ö–æ–¥—É"""
    selected_tab_name = tabview.get()
    if not selected_tab_name:
        messagebox.showwarning("–£–≤–∞–≥–∞", "–°–ø–æ—á–∞—Ç–∫—É —Å—Ç–≤–æ—Ä—ñ—Ç—å –∑–∞—Ö—ñ–¥!")
        return

    tab = tabview.tab(selected_tab_name)
    if hasattr(tab, "contracts_frame"):
        create_document_fields_block(tab.contracts_frame, tabview)
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É
        save_current_state(document_blocks, tabview)
        print("[INFO] –î–æ–≥–æ–≤—ñ—Ä –¥–æ–¥–∞–Ω–æ —Ç–∞ —Å—Ç–∞–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ")
    else:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ–≥–æ–≤–æ—Ä—ñ–≤")


def auto_save_on_change():
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–∏ –∑–º—ñ–Ω–∞—Ö"""
    try:
        save_current_state(document_blocks, tabview)
        print("[DEBUG] –ê–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ")
    except Exception as e:
        print(f"[ERROR] –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è: {e}")


# –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å—Ç–∞–Ω–æ–º –ø—Ä–æ–≥—Ä–∞–º–∏
def manual_save():
    """–†—É—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É"""
    try:
        save_current_state(document_blocks, tabview)
        messagebox.showinfo("–£—Å–ø—ñ—Ö", "–°—Ç–∞–Ω –ø—Ä–æ–≥—Ä–∞–º–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    except Exception as e:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ —Å—Ç–∞–Ω:\n{e}")


def clear_all_data():
    """–û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö (–∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º)"""
    result = messagebox.askyesno(
        "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è",
        "–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—ñ –¥–∞–Ω—ñ?\n–¶—é –¥—ñ—é –Ω–µ–º–æ–∂–ª–∏–≤–æ —Å–∫–∞—Å—É–≤–∞—Ç–∏!"
    )

    if result:
        from state_manager import clear_saved_state
        clear_saved_state()
        messagebox.showinfo("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", "–ó–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ –æ—á–∏—â–µ–Ω–æ. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É.")


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –≥–æ–ª–æ–≤–Ω–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏
    app_root, app_tabview = launch_main_app()

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å –¥–ª—è –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
    main_app_root = app_root
    tabview = app_tabview

    # –ó–∞–ø—É—Å–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª—É
    app_root.mainloop()